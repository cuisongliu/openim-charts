name: Release

on:
  push:
    branches-ignore:
      - '**'
    tags:
      - '*'


jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1

      - name: Prepare
        id: prepare
        run: |
          echo "tag_name=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"
          echo "$tag_name"

      - name: Helm package
        run: |
          mkdir -p charts
          cp -rf openIM ./charts/
          latest_release=${{ steps.prepare.outputs.tag_name }}
          if [[ ${latest_release#v} == "3.0.0-beta.0" ]]; then
            sed -i "s#default#errcode#g" charts/openIM/Chart.yaml
            sed -i "s#0.0.0#3.0.0-beta.0#g" charts/openIM/Chart.yaml
          else
            sed -i "s#0.0.0#${latest_release#v}#g" charts/openIM/Chart.yaml
            sed -i "s#default#${latest_release#v}#g" charts/openIM/Chart.yaml
          fi
          helm package charts/openIM

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v1
        with:
          version: latest
          args: release --rm-dist --timeout=1h
        env:
          VERSION: ${{ steps.prepare.outputs.tag_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  trigger-workflow-build-helm-chart:
    needs: [ goreleaser ]
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Trigger cluster image workflow
        uses: peter-evans/repository-dispatch@v2
        with:
          event-type: release_success
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "version": "${{ env.RELEASE_VERSION }}"}'

