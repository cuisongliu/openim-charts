# Default values for openIM.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


api:
  repository: openim/api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  replicaCount: 1
  podAnnotations: { }
  resources:
    requests:
      memory: "100Mi"
      cpu: 10m
    limits:
      memory: "1024Mi"
      cpu: 600m
  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  nodeSelector: {}
  tolerations: []
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - api
            topologyKey: kubernetes.io/hostname

auth:
  repository: openim/auth
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  replicaCount: 1
  podAnnotations: { }
  resources:
    requests:
      memory: "100Mi"
      cpu: 10m
    limits:
      memory: "512Mi"
      cpu: 300m
  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  nodeSelector: { }
  tolerations: [ ]
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - auth
            topologyKey: kubernetes.io/hostname


conversation:
  repository: openim/conversation
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  replicaCount: 1
  podAnnotations: { }
  resources:
    requests:
      memory: "100Mi"
      cpu: 10m
    limits:
      memory: "512Mi"
      cpu: 300m

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  nodeSelector: { }
  tolerations: [ ]
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - conversation
            topologyKey: kubernetes.io/hostname

cron_task:
  repository: openim/cron_task
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  replicaCount: 1
  podAnnotations: { }
  resources:
    requests:
      memory: "100Mi"
      cpu: 10m
    limits:
      memory: "512Mi"
      cpu: 300m

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


  nodeSelector: { }
  tolerations: [ ]
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - cron_task
            topologyKey: kubernetes.io/hostname

friend:
  repository: openim/friend
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  replicaCount: 1
  podAnnotations: { }
  resources:
    requests:
      memory: "100Mi"
      cpu: 10m
    limits:
      memory: "512Mi"
      cpu: 300m

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


  nodeSelector: { }
  tolerations: [ ]
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - friend
            topologyKey: kubernetes.io/hostname

group:
  repository: openim/group
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  replicaCount: 1
  podAnnotations: { }
  resources:
    requests:
      memory: "100Mi"
      cpu: 10m
    limits:
      memory: "512Mi"
      cpu: 300m

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


  nodeSelector: { }
  tolerations: [ ]
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - group
            topologyKey: kubernetes.io/hostname

msg:
  repository: openim/msg
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  replicaCount: 1
  podAnnotations: { }
  resources:
    requests:
      memory: "100Mi"
      cpu: 10m
    limits:
      memory: "1024Mi"
      cpu: 600m

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


  nodeSelector: { }
  tolerations: [ ]
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - msg
            topologyKey: kubernetes.io/hostname

msg_gateway:
  repository: openim/msg_gateway
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  replicaCount: 1
  podAnnotations: { }
  resources:
    requests:
      memory: "100Mi"
      cpu: 10m
    limits:
      memory: "1024Mi"
      cpu: 600m

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


  nodeSelector: { }
  tolerations: [ ]
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - msg-gateway
            topologyKey: kubernetes.io/hostname

msg_transfer:
  repository: openim/msg_transfer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  replicaCount: 1
  podAnnotations: { }
  resources:
    requests:
      memory: "100Mi"
      cpu: 10m
    limits:
      memory: "1024Mi"
      cpu: 600m

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


  nodeSelector: { }
  tolerations: [ ]
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - msg-transfer
            topologyKey: kubernetes.io/hostname

push:
  repository: openim/push
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  replicaCount: 1
  podAnnotations: { }
  resources:
    requests:
      memory: "100Mi"
      cpu: 10m
    limits:
      memory: "1024Mi"
      cpu: 600m

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

third:
  repository: openim/third
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  replicaCount: 1
  podAnnotations: { }
  resources:
    requests:
      memory: "100Mi"
      cpu: 10m
    limits:
      memory: "1024Mi"
      cpu: 600m

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


  nodeSelector: { }
  tolerations: [ ]
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - third
            topologyKey: kubernetes.io/hostname

user:
  repository: openim/user
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  replicaCount: 1
  podAnnotations: { }
  resources:
    requests:
      memory: "100Mi"
      cpu: 10m
    limits:
      memory: "1024Mi"
      cpu: 600m

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


  nodeSelector: { }
  tolerations: [ ]
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - user
            topologyKey: kubernetes.io/hostname

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


service:
  type: ClusterIP
  port: 8080
  metrics: 9090
  wsPort: 8081


configmap:
  #bitnami-zookeeper.zookeeper.svc.cluster.local
  zookeeper:
    zkAddr: [ bitnami-zookeeper.zookeeper.svc.cluster.local:2181 ] #单机部署时，默认即可
    userName:
    password:
  #echo Primary: bitnami-mysql.mysql.svc.cluster.local:3306
  #echo Username: root
  #MYSQL_ROOT_PASSWORD=$(kubectl get secret --namespace mysql bitnami-mysql -o jsonpath="{.data.mysql-root-password}" | base64 -d)
  mysql:
    dbMysqlAddress: [ bitnami-mysql.mysql.svc.cluster.local:3306 ] #mysql地址 目前仅支持单机，默认即可
    dbMysqlUserName: root #mysql用户名，建议修改
    dbMysqlPassword: mysql123 # mysql密码，建议修改
    dbMysqlDatabaseName: openIM_v2 #默认即可
  #The MongoDB&reg; Sharded cluster can be accessed via the Mongos instances in port 27017 on the following DNS name from within your cluster:
  #mongodb-sharded.mongodb-sharded.svc.cluster.local
  #To get the root password run:
  #export MONGODB_ROOT_PASSWORD=$(kubectl get secret --namespace mongodb-sharded mongodb-sharded -o jsonpath="{.data.mongodb-root-password}" | base64 -d)
  mongo:
    dbAddress: [ mongodb-sharded.mongodb-sharded.svc.cluster.local:27017 ]  #单机时为mongo地址，使用分片集群时，为mongos地址 默认即可
    dbDatabase: openIM  #mongo db 默认即可
    dbSource: admin
    dbUserName: root #mongo用户名，建议先不设置
    dbPassword: ""  #mongo密码，建议先不设置

  #export REDIS_PASSWORD=$(kubectl get secret --namespace "redis-cluster" redis-cluster -o jsonpath="{.data.redis-password}" | base64 -d)
  redis:
    dbAddress:  #redis地址 单机时，填写一个地址即可，使用redis集群时候，填写集群中多个节点地址（主从地址都可以填写，增加容灾能力），默认即可
      - redis-cluster-0.redis-cluster-headless.redis-cluster.svc.cluster.local:6379
      - redis-cluster-1.redis-cluster-headless.redis-cluster.svc.cluster.local:6379
      - redis-cluster-2.redis-cluster-headless.redis-cluster.svc.cluster.local:6379
      - redis-cluster-3.redis-cluster-headless.redis-cluster.svc.cluster.local:6379
      - redis-cluster-4.redis-cluster-headless.redis-cluster.svc.cluster.local:6379
      - redis-cluster-5.redis-cluster-headless.redis-cluster.svc.cluster.local:6379
    dbUserName:     #only redis version 6.0+ need username
    dbPassWord: "" #redis密码 建议修改
    enableCluster: true #如果外部redis以集群方式启动，需要打开此开关
  #bitnami-minio.minio.svc.cluster.local
  #export ROOT_USER=$(kubectl get secret --namespace minio bitnami-minio -o jsonpath="{.data.root-user}" | base64 -d)
  #export ROOT_PASSWORD=$(kubectl get secret --namespace minio bitnami-minio -o jsonpath="{.data.root-password}" | base64 -d)
  minio:
    tempBucket: "openim"
    dataBucket: "openim"
    location: "" #us-east-1
    accessKeyID: admin
    secretAccessKey: minio123
    isDistributedMod: false # 是否分布式多硬盘部署 默认docker-compose中为false，如果是多硬盘部署，需要修改为true

  #bitnami-kafka-0.bitnami-kafka-headless.kafka.svc.cluster.local:9092
  kafka:
    SASLUserName:
    SASLPassword:
    ws2mschat:
      addr: [ bitnami-kafka-0.bitnami-kafka-headless.kafka.svc.cluster.local:9092 ] #kafka配置，默认即可
      topic: "ws2ms_chat" #用于mongo和mysql保存消息
    msgtomongo:
      addr: [ bitnami-kafka-0.bitnami-kafka-headless.kafka.svc.cluster.local:9092 ] #kafka配置，默认即可
      topic: "msg_to_mongo"
    ms2pschat:
      addr: [ bitnami-kafka-0.bitnami-kafka-headless.kafka.svc.cluster.local:9092 ] #kafka配置，默认即可
      topic: "ms2ps_chat" #消息push
    msgtomodify:
      addr: [ bitnami-kafka-0.bitnami-kafka-headless.kafka.svc.cluster.local:9092 ] #kafka配置，默认即可
      topic: "msg_to_modify"
    consumergroupid:
      msgToTransfer: mongo
      msgToMongo: mongo_ex
      msgToMySql: mysql
      msgToPush: push
      msgToModify: modify

istio:
  publicIP: ""
  publicPort: ""
  minio:
    service: bitnami-minio.minio.svc.cluster.local
    port: 9001
    domain: ""
  minioAPI:
    service: bitnami-minio.minio.svc.cluster.local
    port: 9000
    domain: ""
  api:
    domain: ""
  gateway:
    domain: ""
